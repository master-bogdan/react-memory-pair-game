{"version":3,"sources":["assets/images/card.jpg","assets/images/1.jpg","assets/images/2.jpg","assets/images/3.jpg","assets/images/4.jpg","assets/images/5.jpg","assets/images/6.jpg","assets/bg/bg.jpg","styles/globalStyles.ts","components/Navbar/styles.ts","components/Navbar/index.ts","components/Navbar/Navbar.tsx","components/Login/styles.ts","components/Login/index.ts","components/Login/Login.tsx","components/Card/styles.ts","components/Card/index.ts","components/Card/Card.tsx","components/Game/styles.ts","data/images.ts","components/Game/index.ts","components/Game/Game.tsx","styles.ts","App.tsx","index.tsx"],"names":["module","exports","GlobalStyle","createGlobalStyle","reset","StyledNavbar","styled","Navbar","NavBar","name","score","color","NavbarBrand","className","NavbarText","LoginForm","div","Login","getName","onLogin","Form","onSubmit","event","preventDefault","FormGroup","Label","htmlFor","Input","type","placeholder","onChange","currentTarget","value","Button","rotate","keyframes","rotate2","GameCard","check","movement","css","image","bg","match","Card","id","animation","matched","flipped","onCoverClick","data-name","onClick","GameField","imgArray","pic","Dart","Luke","Akbar","Obi","Ayla","Jaja","imagesCopy","JSON","parse","stringify","images","concat","Game","setScore","useState","game","setGame","showField","setShowField","cardOne","setCardOne","cardTwo","setCardTwo","pairCount","setPairCount","useEffect","newGame","sort","Math","random","setTimeout","alert","forEach","item","length","cardName","getAttribute","index","map","Col","xs","key","Main","App","showLogin","setShowLogin","userName","setUserName","gameScore","setGameScore","Container","fluid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46b9ac67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card.fd24ad4b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.0f26e915.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.9b49cf59.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.f05cd155.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.20c2f660.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.56b0e2c1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.91247571.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.2e42a76f.jpg\";","import { createGlobalStyle } from 'styled-components';\nimport { reset } from 'styled-reset';\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n  \n  html {\n    box-sizing: border-box;\n    font-size: 16px;\n    font-family: 'Roboto', sans-serif;\n    height: 100%;\n  }\n  \n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  \n  body, h1, h2, h3, h4, h5, h6, p, ol, ul {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n  }\n  \n  ol, ul {\n    list-style: none;\n  }\n  \n  img {\n    max-width: 100%;\n    height: auto;\n  }\n`;\n","import styled from 'styled-components';\nimport { Navbar } from 'reactstrap';\n\nexport const StyledNavbar = styled(Navbar)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n`;\n","import NavBar from './Navbar';\n\nexport default NavBar;\n","import React from 'react';\nimport { Navbar, NavbarBrand, NavbarText } from 'reactstrap';\nimport {\n  StyledNavbar,\n} from './styles';\n\ninterface NavProps {\n  name: string\n  score: number\n}\n\nconst NavBar: React.FC<NavProps> = ({ name, score }) => (\n  <StyledNavbar color=\"dark mb-2\">\n    <NavbarBrand className=\"text-white\">\n      Memory Pair Game\n    </NavbarBrand>\n    <NavbarText className=\"text-white\">\n      Player name: {name}\n    </NavbarText>\n    <NavbarText className=\"text-white\">\n      Score: {score}\n    </NavbarText>\n  </StyledNavbar>\n);\n\nexport default NavBar;\n","import styled from 'styled-components';\n\nexport const LoginForm = styled.div`\n  width: 80%;\n  max-width: 400px;\n  margin: 30vh auto;\n  padding: 30px;\n  border-radius: 5px;\n  color: white;\n  text-align: center;\n  background: linear-gradient(to top, #2C5364, #203A43, #0F2027);\n`;\n","import Login from './Login';\n\nexport default Login;\n","import React, { useState } from 'react';\nimport {\n  Form, FormGroup, Label, Input, Button,\n} from 'reactstrap';\nimport { LoginForm } from './styles';\n\ninterface LoginProps {\n  getName: Function\n  onLogin: Function\n}\n\nconst Login: React.FC<LoginProps> = ({ getName, onLogin }) => {\n  const getPlayerName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    getName(event.currentTarget.value);\n  };\n\n  const onLoginHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    onLogin();\n  };\n\n  return (\n    <LoginForm>\n      <Form onSubmit={onLoginHandler}>\n        <FormGroup>\n          <Label\n            htmlFor=\"name\"\n          >\n            Enter your name\n          </Label>\n          <Input\n            type=\"text\"\n            placeholder=\"Your name\"\n            onChange={getPlayerName}\n          />\n          <Button\n            className=\"mt-3 btn-info\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </FormGroup>\n      </Form>\n    </LoginForm>\n  );\n};\n\nexport default Login;\n","import styled, { keyframes, css } from 'styled-components';\nimport bg from 'assets/images/card.jpg';\n\ninterface GameCardProps {\n  id: any\n  check: boolean\n  movement: boolean\n  image: string\n  match: boolean\n}\n\nconst rotate = keyframes`\n  from {\n      transform: rotateY(90deg);\n  }\n  to {\n      transform: rotateY(0deg);\n  }\n`;\n\nconst rotate2 = keyframes`\n  from {\n      transform: rotateY(-90deg);\n  }\n  to {\n      transform: rotateY(0deg);\n  }\n`;\n\nexport const GameCard = styled.div<GameCardProps>`\n  width: 160px;\n  height: 220px;\n  margin: 20px 0;\n  box-shadow: 0px 0px 5px 5px rgba(0,0,0,0.75);\n  cursor: pointer;\n  animation: ${({ check, movement }) => (movement || check ? css`${rotate2} 1s forwards` : css`${rotate} 1s forwards`)};\n  background: ${({ movement, check, image }) => (movement || check ? `url(${image}) 50% center/cover no-repeat` : `url(${bg}) 50% center/cover no-repeat`)};\n  visibility: ${({ match }) => (match ? 'hidden' : 'visible')};\n\n  @media (max-width: 780px) {\n    width: 100%;\n    max-width: 130px;\n    height: 180px;\n  }\n`;\n","import Card from './Card';\n\nexport default Card;\n","import React from 'react';\nimport {\n  GameCard,\n} from './styles';\n\ninterface CardProps {\n  id: number\n  animation: boolean\n  name: string\n  image: string\n  matched: boolean\n  flipped: boolean\n  onCoverClick: Function\n}\n\nconst Card: React.FC<CardProps> = ({\n  id, animation, name, image, matched, flipped, onCoverClick,\n}) => (\n  <GameCard\n    id={id}\n    movement={animation}\n    image={image}\n    data-name={name}\n    check={flipped}\n    match={matched}\n    onClick={(event) => onCoverClick(event, id)}\n  />\n);\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const GameField = styled.div`\n  padding: 10px;\n  border: 1px solid black;\n  width: 100%;\n  max-width: 800px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 0 auto;\n  background: rgba(255, 255, 255, 0.5);\n`;\n","import Dart from 'assets/images/1.jpg';\nimport Luke from 'assets/images/2.jpg';\nimport Akbar from 'assets/images/3.jpg';\nimport Obi from 'assets/images/4.jpg';\nimport Ayla from 'assets/images/5.jpg';\nimport Jaja from 'assets/images/6.jpg';\nimport Card from 'assets/images/card.jpg';\n\nexport type ICard = {\n  name: string\n  pic: any\n  flipped: boolean\n  match: boolean\n}\n\nconst imgArray: Array<ICard> = [\n  {\n    name: 'Dart',\n    pic: Dart,\n    flipped: false,\n    match: false,\n  },\n  {\n    name: 'Luke',\n    pic: Luke,\n    flipped: false,\n    match: false,\n  },\n  {\n    name: 'Akbar',\n    pic: Akbar,\n    flipped: false,\n    match: false,\n  },\n  {\n    name: 'Obi',\n    pic: Obi,\n    flipped: false,\n    match: false,\n  },\n  {\n    name: 'Ayla',\n    pic: Ayla,\n    flipped: false,\n    match: false,\n  },\n  {\n    name: 'JaJa',\n    pic: Jaja,\n    flipped: false,\n    match: false,\n  },\n];\n\nconst imagesCopy: ICard[] = JSON.parse(JSON.stringify(imgArray));\n\nexport const images: ICard[] = imgArray.concat(imagesCopy);\n\nexport const cover = [\n  {\n    name: 'card',\n    pic: Card,\n    flipped: false,\n  },\n];\n","import Game from './Game';\n\nexport default Game;\n","import React, { useState, useEffect } from 'react';\nimport Card from '../Card';\nimport { Col } from 'reactstrap';\nimport {\n  GameField,\n} from './styles';\n// Data\nimport { images, ICard } from 'data/images';\n\ninterface GameProps {\n  score: number\n  setScore: Function\n}\n\ntype Match = Array<string | null | number>;\n\nconst Game: React.FC<GameProps> = ({ setScore, score }) => {\n  const [game, setGame] = useState <ICard[]>([]);\n  const [showField, setShowField] = useState <boolean>(true);\n  const [cardOne, setCardOne] = useState <Match>([]);\n  const [cardTwo, setCardTwo] = useState <Match>([]);\n  const [pairCount, setPairCount] = useState <number>(0);\n\n  // Start first game\n  useEffect(() => {\n    const newGame: ICard[] = images.sort(() => Math.random() - 0.5);\n    setGame(newGame);\n    setTimeout(() => setShowField(false), 2000);\n  }, []);\n\n  // Start new game\n  useEffect(() => {\n    if (pairCount === 6) {\n      setScore(score + 1);\n      alert('When I left you, I was but the learner. Now I am the master.');\n      setTimeout(() => {\n        const newGame: ICard[] = images.sort(() => Math.random() - 0.5);\n        newGame.forEach((item) => { item.match = false; });\n        setGame(newGame);\n        setShowField(true);\n        setPairCount(0);\n      }, 500);\n      setTimeout(() => setShowField(false), 3000);\n    }\n  }, [pairCount]);\n\n  // Compare cards\n  useEffect(() => {\n    if (cardTwo.length !== 0 && cardOne[0] === cardTwo[0]) {\n      setTimeout(() => {\n        setPairCount(pairCount + 1);\n        setCardOne([]);\n        setCardTwo([]);\n        game.forEach((item) => {\n          if (item.name === cardOne[0]) {\n            item.match = true;\n          }\n        });\n      }, 400);\n    }\n  }, [cardOne, cardTwo]);\n\n  const onCoverClick = (\n    event: React.SyntheticEvent,\n    id: number,\n  ) => {\n    const card = event.currentTarget;\n    const cardName: string | null = card.getAttribute('data-name');\n\n    if (cardOne.length === 0) {\n      setCardOne([cardName, id]);\n      game.forEach((item, index) => {\n        if (id === index) {\n          item.flipped = true;\n        }\n      });\n    }\n    // Detect same card click\n    if (cardOne[1] === id) {\n      game.forEach((item) => {\n        item.flipped = false;\n      });\n      setCardOne([]);\n      setCardTwo([]);\n      return false;\n    }\n    // Condition to add second card for compare\n    if (cardOne.length !== 0) {\n      setCardTwo([cardName, id]);\n      game.forEach((item, index) => {\n        if (id === index) {\n          item.flipped = true;\n        }\n      });\n      // False if not match\n      setTimeout(() => {\n        game.forEach((item) => {\n          item.flipped = false;\n        });\n        setCardOne([]);\n        setCardTwo([]);\n        return false;\n      }, 600);\n    }\n\n    return true;\n  };\n\n  return (\n    <GameField>\n      {game.map((item, index) => (\n          // eslint-disable-next-line\n          <Col xs=\"3\" key={index}>\n            <Card\n              id={index}\n              animation={showField}\n              name={item.name}\n              image={item.pic}\n              flipped={item.flipped}\n              matched={item.match}\n              onCoverClick={onCoverClick}\n            />\n          </Col>\n      ))}\n    </GameField>\n  );\n};\n\nexport default Game;\n","import styled from 'styled-components';\nimport bg from 'assets/bg/bg.jpg';\n\nexport const Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: url(${bg}) center / cover no-repeat;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { useState } from 'react';\nimport { Container } from 'reactstrap';\nimport NavBar from './components/Navbar';\nimport Login from './components/Login';\nimport Game from './components/Game';\nimport { Main } from './styles';\n\nconst App: React.FC = () => {\n  const [showLogin, setShowLogin] = useState <boolean>(true);\n  const [userName, setUserName] = useState <string>('');\n  const [gameScore, setGameScore] = useState <number>(0);\n\n  const setName = (value: string) => {\n    setUserName(value);\n  };\n\n  const setLogin = () => {\n    if (userName !== '') {\n      setShowLogin(false);\n    }\n  };\n\n  return (\n    <Main>\n      <NavBar\n        name={userName}\n        score={gameScore}\n      />\n      <Container fluid>\n        {showLogin ? (\n          <Login\n            getName={setName}\n            onLogin={setLogin}\n          />\n        )\n          : (\n            <Game\n              score={gameScore}\n              setScore={setGameScore}\n            />\n          )}\n      </Container>\n    </Main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from 'styles/globalStyles';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}